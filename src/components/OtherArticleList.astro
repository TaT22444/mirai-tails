---
import { getBlogs } from '../library/microcms';
const response = await getBlogs({
  fields: ["id", "title", "thumbnail", "tag", "publishedAt", "article_name", "article_summary", "article_link"]
});

interface Article {
  id: string;
  title: string;
  thumbnail: { url: string };
  tag: string;
  publishedAt: string;
}

let visibleCount = 6; // 初期表示数6件
---

<ul class="article-list" id="article-list">
  {response.contents.map((content, index) => (
    <li 
      class="article-item" 
      data-tag={content.tag} 
      style={`display: ${index < visibleCount ? 'block' : 'none'}`}
    >
      <a href={"../" + content.id} class="article-item-link">
        <img class="article-item-img" src={content.thumbnail.url} alt="" />
        <ul class="article-item-tagList">
          <li class="article-item-tagList-item">{content.tag}</li>
          <li class="article-item-tagList-item">
            <p class="article-item-timestamp">
              <time class="article-item-timestamp-label" datetime="">
                {content.publishedAt.substring(0, 10)}
              </time>
            </p>
          </li>
        </ul>
        <h3 class="article-item-title">{content.title}</h3>
      </a>
    </li>
  ))}
</ul>

<div class="show-more-button-wrapper">
  <button class="show-more-button" id="show-more-button" hidden>
    もっと見る
  </button>
</div>

<style lang="scss">
.prot{
	display: none;
}

.show-more-button-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  margin: 40px auto 0;
}

.show-more-button-wrapper::before,
.show-more-button-wrapper::after {
  content: "";
  flex: 1;
  height: 1px;
  background-color: #d3d3d3;
}

.show-more-button {
  margin: 0 16px;
  padding: 8px 24px;
  font-size: 12px;
	font-weight: 600;
	color: #252528;
  border-radius: 100px;
  border: 1px solid #636366;
  cursor: pointer;
}

.article{
		// margin-top: 16px;
		width: 100%;

		@media screen and (max-width:834px) {
			// margin-top: 16px;
    }

		&-list{
			width: 100%;
			display: flex;
			flex-wrap: wrap;
			column-gap: 24px;
			row-gap: 32px;

			@media screen and (max-width:834px) {
        width: 100%;
      }

			@media screen and (max-width:440px) {
        row-gap: 24px;
      }
		}

		&-item{
			position: relative;
			width: calc((100% - 88px) / 3);

			@media screen and (max-width:1512px) {
        width: calc((100% - 48px) / 2);
      }

			@media screen and (max-width:834px) {
        width: calc((100% - 24px) / 2);
      }

			@media screen and (max-width:440px) {
        width: 100%;
				padding-bottom: 16px;
				
				&::after{
					content: "";
					position: absolute;
					width: calc(100% + 32px);
					height: 1px;
					bottom: 0;
					left: -16px;
					background-color: #d3d3d3;
				}
      }

			// @media screen and (max-width:1120) {
      //   width: calc((100% - 64px) / 2);
      // }

			&-link{
				display: block;
			}

			&-img{
				width: 100%;
				aspect-ratio: 16/9;
				object-fit: cover;
				border-radius: 4px;
			}

			&-tagList{
				display: flex;
				justify-content: space-between;
				gap: 16px;
				margin-top: 8px;

				&-item{
					font-size: 12px;
					font-weight: bold;
					color: #252528;
				}
			}

			&-title{
				position: relative;
				font-size: 18px;
				font-weight: 600;
				color: #252528;
				margin-top: 8px;

				@media screen and (max-width:440px) {
          // font-size: 20px;
					margin-top: 4px;
        }


			// &::after{
			// 	content: "記事を見る →";
			// 	position: absolute;
			// 	left: 0;
			// 	bottom: -48px;
			// 	padding: 8px 16px;
			// 	color: #252528;
			// 	display: flex;
			// 	align-items: center;
			// 	justify-content: center;
			// 	font-size: 12px;
			// 	border-radius: 100px;
			// 	// background-color: #98989b;
			// 	border: 1px solid #252528;
			// }

			}

			&-footer{
				// display: none;
				display: flex;
				justify-content: space-between;
				align-items: center;
				margin-top: 8px;
				@media screen and (max-width:440px) {
					margin-top: 4px;
        }

				&-span{
					display: none;
					width: 70%;
					height: 1px;
					// background-color: #636366;
				}
			}

			&-iconList{
				display: flex;
				// display: none;
				align-items: center;
				gap: 16px;

				&-item{
					display: flex;
					gap: 4px;
					align-items: center;

					&-sum{
						font-size: 12px;
						font-weight: 500;
						color: #636366;
					}
				}
			}

			&-timestamp{

				&-label{
					font-size: 12px;
					font-weight: 400;
					color: #636366;
				}
			}
		}
	}
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const articleList = document.getElementById('article-list') as HTMLElement | null;
    const showMoreButton = document.getElementById('show-more-button') as HTMLButtonElement | null;
    let visibleCount = 6;

    const updateArticles = () => {
      if (!articleList || !showMoreButton) return; // nullチェック

      const articles = Array.from(articleList.children) as HTMLElement[];

      // 記事の表示・非表示を更新
      articles.forEach((article, index) => {
        article.style.display = index < visibleCount ? 'block' : 'none';
      });

      // ボタンの表示制御
      showMoreButton.style.display = visibleCount >= articles.length ? 'none' : 'block';
    };

    // 「もっと見る」ボタンのイベントリスナー
    if (showMoreButton) {
      showMoreButton.addEventListener('click', () => {
        visibleCount += 6; // 3件ずつ追加表示
        updateArticles();
      });
    }

    // 初期表示とボタンの表示制御
    updateArticles();
    if (articleList && articleList.children.length > 6 && showMoreButton) {
      showMoreButton.hidden = false;
    }
  });
</script>
